name: Auto Format
on:
  # Disabled auto-formatting to prevent unwanted commits
  # Uncomment the lines below to re-enable:
  # push:
  #   branches: [main, develop]
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
jobs:
  auto-format:
    name: Auto Format Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Install formatting tools
        run: |
          nix profile install nixpkgs#nixpkgs-fmt
          nix profile install nixpkgs#deadnix
          nix profile install nixpkgs#shfmt
      - name: Setup Node.js for markdown formatting
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install markdown formatter
        run: |
          npm install -g prettier
      - name: Format Nix files
        run: |
          echo "Formatting Nix files..."
          nixpkgs-fmt .
      - name: Remove dead code
        run: |
          echo "Removing dead code..."
          # Use deadnix without --edit to avoid removing required function arguments
          deadnix --fail . && echo "No dead code found" || echo "Dead code detected but not auto-removed to preserve function arguments"
      - name: Format shell scripts
        run: |
          echo "Formatting shell scripts..."
          find . -name "*.sh" -type f -exec shfmt -w -i 2 -bn -ci {} \; || echo "shfmt completed"
      - name: Format markdown files
        run: |
          echo "Formatting markdown files..."
          prettier --write "**/*.md" || echo "Prettier completed"
      - name: Format JSON files
        run: |
          echo "Formatting JSON files..."
          find . -name "*.json" -type f -exec prettier --write {} \; || echo "JSON formatting completed"
      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "No formatting changes needed"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Formatting changes detected"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
      - name: Commit formatting changes
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Auto-format code [skip ci]" || echo "No changes to commit"
      - name: Push changes
        if: steps.check-changes.outputs.changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
