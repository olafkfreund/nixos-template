# Hardware configuration for example-server
# This file is typically generated by nixos-generate-config
# Replace this with your actual hardware configuration

{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # Example server hardware configuration - REPLACE WITH YOUR ACTUAL CONFIG
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];  # or "kvm-amd" for AMD
  boot.extraModulePackages = [ ];

  # Filesystem configuration - EXAMPLE ONLY
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/YOUR-ROOT-UUID";
      fsType = "ext4";
      options = [ "noatime" ];  # Performance optimization
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/YOUR-BOOT-UUID";
      fsType = "vfat";
    };

  # Data partition (optional for servers)
  fileSystems."/data" =
    { device = "/dev/disk/by-uuid/YOUR-DATA-UUID";
      fsType = "ext4";
      options = [ "noatime" "user_xattr" ];
    };

  # Swap configuration - Consider size based on RAM and workload
  swapDevices = [
    { device = "/dev/disk/by-uuid/YOUR-SWAP-UUID"; }
  ];

  # Network hardware
  networking.useDHCP = lib.mkDefault true;
  # For static IP configuration:
  # networking.interfaces.enp3s0.ipv4.addresses = [ {
  #   address = "192.168.1.100";
  #   prefixLength = 24;
  # } ];
  # networking.defaultGateway = "192.168.1.1";
  # networking.nameservers = [ "8.8.8.8" "1.1.1.1" ];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  
  # Hardware specific options for servers
  hardware = {
    # CPU microcode (adjust based on your CPU)
    cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    # cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    
    # Enable firmware
    enableRedistributableFirmware = true;
  };

  # Server-specific boot options
  boot = {
    # Use GRUB for servers (better compatibility)
    loader.grub = {
      enable = true;
      device = "/dev/sda";  # Adjust for your primary disk
    };
    
    # Server kernel optimizations
    kernel.sysctl = {
      # Increase file descriptor limits
      "fs.file-max" = 2097152;
      
      # Network buffer sizes for high-throughput workloads
      "net.core.rmem_max" = 268435456;
      "net.core.wmem_max" = 268435456;
      
      # Memory management for servers
      "vm.swappiness" = 10;
      "vm.dirty_ratio" = 15;
    };
  };
}